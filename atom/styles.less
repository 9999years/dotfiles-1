/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed.
 *
 * If you are unfamiliar with LESS, you can read more about it here:
 * http://www.lesscss.org
 */

@import "syntax-variables";
@import "ui-variables";

@font-mono: 'Pragmata Pro', Monoid, Hasklig, 'Fira Code', Menlo
          , Monaco, Consolas, 'DejaVu Sans Mono', monospace;


/*
    Styles for all text editor windows
 */
atom-text-editor {
    /*
        Font rendering

        These settings enable ligatures and contextual alternate glyphs
        to make Atom render all the available ligatures in typefaces like
        Pragmata Pro, Monoid, and Hasklig.

     */
    text-rendering: optimizeLegibility;
    -webkit-font-feature-settings: "liga" 1, "calt" 1;
    font-feature-settings: "liga" 1, "calt" 1;

    .keyword {
        text-decoration: bold !important;
    }
    
    /*
        Custom colors for overly-long lines in git commits
     */
    .git-commit.line-too-long {

        .deprecated {
            color: #d08770;
            text-decoration: none;
        }
        .illegal {
          color: #fff;
          background: #bf616a;
          opacity: 0.9;
        }
    }
}

atom-text-editor::shadow {


    /*
        Rust language-specific settings.

        This mostly just changes a bunch of ugly colors in the
        atom-language-rust package that I don't like.
     */
    .meta.attribute.rust {
        // Change the really disgusting color for attributes to soemthing
        // pretty.
        color: #65737e;
    }
    .markup.definition.rust {
        bg-color: #1c2028;
    }
    .keyword.other.unsafe.rust {
        // make `unsafe` a nice yellow warning color.
        color:  #ebcb8b;
    }
    .storage.modifier.lifetime.rust,
    .entity.name.lifetime.rust {
        // Non-ugly colors for Rust lifetimes
        color:
            // #ab7967;
            mix(#0ff, @syntax-text-color, 70%);
    }

    /*
     *      Fix issue where Atom doesn't render some ligatures in Rust source
     */
    .source.rust {
        // force Atom to draw ligatures in Rust source
        text-rendering: optimizeLegibility;
        -webkit-font-feature-settings: "liga" 1, "calt" 1;
        font-feature-settings: "liga" 1, "calt" 1
    }
    .keyword.operator.rust {
        // force Atom to draw all ligatures in Rust operators
        -webkit-font-feature-settings:
            "liga" on, "calt" on, "dlig" on !important;
        font-feature-settings: "liga" on, "calt" on, "dlig" on !important;
    }
}

.title-bar {
  height: 25px;
  visibility: hidden;
}


/*
    tool-bar package
 */
.tool-bar {
    border: 1px solid @tool-panel-background-color;
    background-color: @tool-panel-background-color;

    button.tool-bar-btn {
        background-color: inherit;
    }

    &.tool-bar-horizontal .tool-bar-spacer {
            border-left: 1px solid @text-color-subtle;
    }
}

.theme-one-dark-ui {
    font-face: @font-family;
}

.tree-view.full-menu {
    background-color: @tool-panel-background-color;
}

/*
        tokamak-terminal and platformIO terminal plugins
 */
.tokamak-terminal .xterm,
.platformio-ide-terminal .xterm {
    background-color: @tool-panel-background-color;

    color: @text-color;

    ::selection {
        background-color: @text-color-highlight;
    }

    .terminal-cursor {
        background-color: @text-color-highlight;
    }
}

/*
        atom-build plugin
 */
.build {
     font-family: @font-mono;

    .output.override-theme {
        // Change output panel colors to match theme colors
        color: @text-color;
        background-color: @tool-panel-background-color;
    }
 }
